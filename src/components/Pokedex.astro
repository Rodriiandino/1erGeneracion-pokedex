---
import MainScreean from './MainScreen.astro'
import Gear from './Gear.astro'
import AsideScreean from './AsideScreen.astro'
---

<script>
  const getPokemonDetails = async pokemonUrl => {
    try {
      const res = await fetch(pokemonUrl)
      const pokemonDetails = await res.json()

      console.log(pokemonDetails)

      const pokemonImageUrl = pokemonDetails.sprites.front_default

      // Seleccionar el div de pantalla principal del Pokémon
      const $mainScreenPokemonDiv = document.querySelector(
        '.pokemon'
      ) as HTMLDivElement
      $mainScreenPokemonDiv.style.backgroundImage = `url(${pokemonImageUrl})`

      const $pokemonName = document.querySelector(
        '.pokemon-name'
      ) as HTMLDivElement
      $pokemonName.innerHTML = `${pokemonDetails.name}`

      // Tipo de Pokémon
      const typeColors = {
        normal: 'gray',
        fire: 'orange',
        water: 'blue',
        grass: 'green',
        electric: 'yellow',
        ice: 'lightblue',
        fighting: 'red',
        poison: 'purple',
        ground: 'brown',
        flying: 'skyblue',
        psychic: 'pink',
        bug: 'lime',
        rock: 'tan',
        ghost: 'indigo',
        dragon: 'darkblue',
        fairy: 'lightpink'
      }

      // Cambiar el color de fondo del nombre del Pokémon según sus tipos
      const types = pokemonDetails.types.map(type => type.type.name)

      $pokemonName.style.background = `linear-gradient(to right, ${types
        .map(type => typeColors[type])
        .join(', ')})`

      const $pokemonTypes = document.querySelector(
        '.pokemon-type'
      ) as HTMLDivElement

      $pokemonTypes.innerHTML = types
        .map(
          type =>
            `<li style="background-color: ${typeColors[type]}; padding:0.3rem 0.5rem; border-radius: 15px ">${type}</li>`
        )
        .join('')
    } catch (error) {
      console.log(error)
    }
  }

  const getPokemon = async () => {
    try {
      const url = 'https://pokeapi.co/api/v2/pokemon?limit=151'
      const res = await fetch(url)
      const pokemon = await res.json()

      // Sea almacena todos los datos de los Pokémon de la primera generación
      const pokemonList = pokemon.results.slice(0, 151)

      let currentIndex = 0 // Índice del Pokémon actual

      const displayPokemon = async () => {
        const pokemonData = pokemonList[currentIndex].url
        await getPokemonDetails(pokemonData)
      }

      // Mostrar el primer Pokémon al cargar la página
      displayPokemon()

      // Obtener el botón y asociar la función de cambio de Pokémon al hacer clic
      const $nextButtons = document.querySelectorAll('.main__next')
      $nextButtons.forEach($nextButton => {
        $nextButton.addEventListener('click', () => {
          currentIndex = (currentIndex + 1) % pokemonList.length // Avanzar al siguiente Pokémon o volver al principio si se llega al final
          displayPokemon()
        })
      })

      const $backButtons = document.querySelectorAll('.main__back')
      $backButtons.forEach($backButton => {
        $backButton.addEventListener('click', () => {
          currentIndex =
            (currentIndex - 1 + pokemonList.length) % pokemonList.length // Volver de Pokémon
          displayPokemon()
        })
      })

      const $asideNextButton = document.querySelector('.aside__next')
      $asideNextButton.addEventListener('click', () => {
        currentIndex = (currentIndex + 1) % pokemonList.length
        displayPokemon()
      })

      const $asideBackButton = document.querySelector('.aside__back')
      $asideBackButton.addEventListener('click', () => {
        currentIndex =
          (currentIndex - 1 + pokemonList.length) % pokemonList.length
        displayPokemon()
      })
    } catch (error) {
      console.log(error)
    }
  }

  getPokemon()
</script>

<main>
  <MainScreean />
  <Gear />
  <AsideScreean />
</main>

<style>
  main {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
  }
</style>
